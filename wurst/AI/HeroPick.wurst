package HeroPick

import ClosureTimers
import HashMap
import Selector
import BasicAI

constant PICK_DELAY = 42.

public IterableMap<player, AIRunner> computer = new IterableMap<player, AIRunner>

function heroFilter() returns boolean
  let u = GetFilterUnit()
  let p = GetEnumPlayer()
  return u.isType(UNIT_TYPE_HERO) and u.isPaused() and p.hasVisibility(u)

function advancedPlayerFilter() returns boolean
  return playerFilter() and GetFilterPlayer().getController() == MAP_CONTROL_COMPUTER
init
  doAfter(PICK_DELAY) ->
    let f = GetPlayersMatching(Condition(function advancedPlayerFilter))
    f.forEach() ->
      let p = GetEnumPlayer()
      let heroes = GetUnitsInRectMatching(GetPlayableMapRect(), Condition(function heroFilter))
      let picked = heroes.getRandom()
      p.pickHero(picked)
      computer.put(p, new AIRunner(picked))
      heroes.destr()

    f.destr()

